[{"/Users/sahajamatya/Desktop/locus/time/total-time/src/index.js":"1","/Users/sahajamatya/Desktop/locus/time/total-time/src/reportWebVitals.js":"2","/Users/sahajamatya/Desktop/locus/time/total-time/src/App.js":"3","/Users/sahajamatya/Desktop/locus/time/total-time/src/Content/Content.js":"4"},{"size":500,"mtime":1609617078091,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1609617078091,"results":"7","hashOfConfig":"6"},{"size":173,"mtime":1609634221654,"results":"8","hashOfConfig":"6"},{"size":5666,"mtime":1609637867913,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1qq89oe",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/sahajamatya/Desktop/locus/time/total-time/src/index.js",[],["20","21"],"/Users/sahajamatya/Desktop/locus/time/total-time/src/reportWebVitals.js",[],"/Users/sahajamatya/Desktop/locus/time/total-time/src/App.js",[],"/Users/sahajamatya/Desktop/locus/time/total-time/src/Content/Content.js",["22"],"import React, { Component } from 'react';\nimport './Content.css';\n\nclass Content extends Component {\n    state = {\n        time: 12,\n        displayTime: \"2 to 3\",\n        roadLen: 61395,\n        numDrivers: 24,\n        avgSpeed: 40,\n        numHours: 6,\n        unit: \"weeks\"\n    }\n\n    changeRoadLen = value => {\n        this.setState({\n            roadLen: value,\n            time: value * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * this.state.numHours),\n            displayTime: Math.floor(value * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * this.state.numHours)) + \" to \" + Math.floor(value * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * this.state.numHours) + 1)\n        });\n    }\n\n    changeNumDrivers = value => {\n        this.setState({\n            numDrivers: value,\n            displayTime: Math.floor(this.state.roadLen * 24 / (this.state.avgSpeed * 168 * value * this.state.numHours)) + \" to \" + Math.floor(this.state.roadLen * 24 / (this.state.avgSpeed * 168 * value * this.state.numHours) + 1)\n        });\n    }\n\n    changeAvgSpeed = value => {\n        this.setState({\n            avgSpeed: value,\n            displayTime: Math.floor(this.state.roadLen * 24 / (value * 168 * this.state.numDrivers * this.state.numHours)) + \" to \" + Math.floor(this.state.roadLen * 24 / (value * 168 * this.state.numDrivers * this.state.numHours) + 1)\n        });\n    }\n\n    changeNumHours = value => {\n        this.setState({\n            numHours: value,\n            displayTime: Math.floor(this.state.roadLen * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * value)) + \" to \" + Math.floor(this.state.roadLen * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * value) + 1)\n        });\n    }\n    render() {\n        return (\n            <div>\n                {/* <p>This is the time: {this.state.displayTime} {this.state.unit}</p>\n                <p>Total length of road: {this.state.roadLen} km</p>\n                <input type=\"range\" min=\"1\" max=\"80000\" value={this.state.roadLen} onChange={(e) => { this.changeRoadLen(e.target.value) }} />\n                <p>Number of drivers: {this.state.numDrivers} </p>\n                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.numDrivers} onChange={(e) => { this.changeNumDrivers(e.target.value) }} />\n                <p>Number of hours driven per day: {this.state.numHours} hours</p>\n                <input type=\"range\" min=\"1\" max=\"24\" value={this.state.numHours} onChange={(e) => { this.changeNumHours(e.target.value) }} />\n                <p>Average driving speed: {this.state.avgSpeed} km/hr</p>\n                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.avgSpeed} onChange={(e) => { this.changeAvgSpeed(e.target.value) }} />\n                <p></p> */}\n                <p className=\"title\">Locus Location Street Data Collection Time Estimation Tool</p>\n                <div className=\"tableWrapper\">\n                    <table className=\"fl-table\">\n                        <tr>\n                            <th>Variables</th>\n                            <th>Base Case Value</th>\n                            <th>Adjustment</th>\n                        </tr>\n                        <tr>\n                            <td>Total Lenght of Road</td>\n                            <td>61,395 km*</td>\n                            <td>\n                                {this.state.roadLen} km <br />\n                                <input type=\"range\" min=\"1\" max=\"200000\" value={this.state.roadLen} onChange={(e) => { this.changeRoadLen(e.target.value) }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Number of Drivers</td>\n                            <td>24</td>\n                            <td>\n                                {this.state.numDrivers}<br />\n                                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.numDrivers} onChange={(e) => { this.changeNumDrivers(e.target.value) }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>No. of hours driven per day</td>\n                            <td>6 hours</td>\n                            <td>\n                                {this.state.numHours} hour(s) <br />\n                                <input type=\"range\" min=\"1\" max=\"24\" value={this.state.numHours} onChange={(e) => { this.changeNumHours(e.target.value) }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Average driving speed</td>\n                            <td>40 km/hr</td>\n                            <td>\n                                {this.state.avgSpeed} km/hr <br />\n                                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.avgSpeed} onChange={(e) => { this.changeAvgSpeed(e.target.value) }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Total time</td>\n                            <td>2 to 3 weeks</td>\n                            <td className=\"result\">{this.state.displayTime} {this.state.unit}</td>\n                        </tr>\n                    </table>\n                </div>\n                <div className=\"sources\">\n                    <p>* <a href=\"https://mof.gov.np/uploads/document/file/Economic%20Survey%202019_20201125024153.pdf\" target=\"_blank\">The Economic Survey 2019/20</a>, Ministry of Finance, Nepal | Pg. 111, Table 11 (d)</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Content;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":104,"column":26,"nodeType":"29","endLine":104,"endColumn":137},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]