{"version":3,"sources":["Content/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Content","state","time","displayTime","roadLen","numDrivers","avgSpeed","numHours","unit","changeRoadLen","value","setState","Math","floor","changeNumDrivers","changeAvgSpeed","changeNumHours","className","this","type","min","max","onChange","e","target","href","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8cc284d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Content.css';\n\nclass Content extends Component {\n    state = {\n        time: 12,\n        displayTime: \"2 to 3\",\n        roadLen: 61395,\n        numDrivers: 24,\n        avgSpeed: 40,\n        numHours: 6,\n        unit: \"weeks\"\n    }\n\n    changeRoadLen = value => {\n        this.setState({\n            roadLen: value,\n            time: value * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * this.state.numHours),\n            displayTime: Math.floor(value * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * this.state.numHours)) + \" to \" + Math.floor(value * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * this.state.numHours) + 1)\n        });\n    }\n\n    changeNumDrivers = value => {\n        this.setState({\n            numDrivers: value,\n            displayTime: Math.floor(this.state.roadLen * 24 / (this.state.avgSpeed * 168 * value * this.state.numHours)) + \" to \" + Math.floor(this.state.roadLen * 24 / (this.state.avgSpeed * 168 * value * this.state.numHours) + 1)\n        });\n    }\n\n    changeAvgSpeed = value => {\n        this.setState({\n            avgSpeed: value,\n            displayTime: Math.floor(this.state.roadLen * 24 / (value * 168 * this.state.numDrivers * this.state.numHours)) + \" to \" + Math.floor(this.state.roadLen * 24 / (value * 168 * this.state.numDrivers * this.state.numHours) + 1)\n        });\n    }\n\n    changeNumHours = value => {\n        this.setState({\n            numHours: value,\n            displayTime: Math.floor(this.state.roadLen * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * value)) + \" to \" + Math.floor(this.state.roadLen * 24 / (this.state.avgSpeed * 168 * this.state.numDrivers * value) + 1)\n        });\n    }\n    render() {\n        return (\n            <div>\n                {/* <p>This is the time: {this.state.displayTime} {this.state.unit}</p>\n                <p>Total length of road: {this.state.roadLen} km</p>\n                <input type=\"range\" min=\"1\" max=\"80000\" value={this.state.roadLen} onChange={(e) => { this.changeRoadLen(e.target.value) }} />\n                <p>Number of drivers: {this.state.numDrivers} </p>\n                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.numDrivers} onChange={(e) => { this.changeNumDrivers(e.target.value) }} />\n                <p>Number of hours driven per day: {this.state.numHours} hours</p>\n                <input type=\"range\" min=\"1\" max=\"24\" value={this.state.numHours} onChange={(e) => { this.changeNumHours(e.target.value) }} />\n                <p>Average driving speed: {this.state.avgSpeed} km/hr</p>\n                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.avgSpeed} onChange={(e) => { this.changeAvgSpeed(e.target.value) }} />\n                <p></p> */}\n                <p className=\"title\">Locus Location Street Data Collection Time Estimation Tool</p>\n                <div className=\"tableWrapper\">\n                    <table className=\"fl-table\">\n                        <tr>\n                            <th>Variables</th>\n                            <th>Base Case Value</th>\n                            <th>Adjustment</th>\n                        </tr>\n                        <tr>\n                            <td>Total Lenght of Road</td>\n                            <td>61,395 km*</td>\n                            <td>\n                                {this.state.roadLen} km <br />\n                                <input type=\"range\" min=\"1\" max=\"200000\" value={this.state.roadLen} onChange={(e) => { this.changeRoadLen(e.target.value) }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Number of Drivers</td>\n                            <td>24</td>\n                            <td>\n                                {this.state.numDrivers}<br />\n                                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.numDrivers} onChange={(e) => { this.changeNumDrivers(e.target.value) }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>No. of hours driven per day</td>\n                            <td>6 hours</td>\n                            <td>\n                                {this.state.numHours} hour(s) <br />\n                                <input type=\"range\" min=\"1\" max=\"24\" value={this.state.numHours} onChange={(e) => { this.changeNumHours(e.target.value) }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Average driving speed</td>\n                            <td>40 km/hr</td>\n                            <td>\n                                {this.state.avgSpeed} km/hr <br />\n                                <input type=\"range\" min=\"1\" max=\"100\" value={this.state.avgSpeed} onChange={(e) => { this.changeAvgSpeed(e.target.value) }} />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Total time</td>\n                            <td>2 to 3 weeks</td>\n                            <td className=\"result\">{this.state.displayTime} {this.state.unit}</td>\n                        </tr>\n                    </table>\n                </div>\n                <div className=\"sources\">\n                    <p>* <a href=\"https://mof.gov.np/uploads/document/file/Economic%20Survey%202019_20201125024153.pdf\" target=\"_blank\">The Economic Survey 2019/20</a>, Ministry of Finance, Nepal | Pg. 111, Table 11 (d)</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Content;","import './App.css';\nimport Content from './Content/Content';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}